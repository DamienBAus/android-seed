apply plugin: 'com.android.application'

android {

	compileSdkVersion 21
	buildToolsVersion "21.1.1"

	defaultConfig {
		applicationId "com.example.android.app"

		minSdkVersion 10
		targetSdkVersion 21

		versionCode 1
		versionName "0.0.1-SNAPSHOT"

		testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
		multiDexEnabled true
	}

	buildTypes {
		debug {
			debuggable true
			testCoverageEnabled = true
		}
	}

	packagingOptions {
		exclude 'LICENSE.txt'
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/NOTICE'
	}
}


apply plugin: 'android-unit-test'

androidUnitTest {
	downloadDependenciesSources true
	downloadDependenciesJavadoc true
	downloadTestDependenciesSources true
	downloadTestDependenciesJavadoc true
}

dependencies {

	// app
	compile 'com.android.support:support-v4:21.0.2'
	compile 'com.android.support:appcompat-v7:21.0.2'
	compile('com.google.android.gms:play-services:6.1.+') {
		exclude module: 'support-v4'
	}

	// robolectric
	testCompile 'junit:junit:4.11'
	testCompile 'org.mockito:mockito-core:1.9.5'
	testCompile 'com.squareup:fest-android:1.0.8'
	testCompile('org.robolectric:robolectric:2.4') {
		exclude module: 'classworlds'
		exclude module: 'commons-logging'
		exclude module: 'httpclient'
		exclude module: 'maven-artifact'
		exclude module: 'maven-artifact-manager'
		exclude module: 'maven-error-diagnostics'
		exclude module: 'maven-model'
		exclude module: 'maven-plugin-registry'
		exclude module: 'maven-profile'
		exclude module: 'maven-project'
		exclude module: 'maven-settings'
		exclude module: 'nekohtml'
		exclude module: 'plexus-container-default'
		exclude module: 'plexus-interpolation'
		exclude module: 'plexus-utils'
		exclude module: 'wagon-file'
		exclude module: 'wagon-http-lightweight'
		exclude module: 'wagon-http-shared'
		exclude module: 'wagon-provider-api'
	}

	// espresso
	androidTestCompile 'com.google.guava:guava:16.0'
	androidTestCompile 'com.squareup.dagger:dagger:1.2.1'
	androidTestCompile 'org.hamcrest:hamcrest-core:1.1'
	androidTestCompile 'org.hamcrest:hamcrest-library:1.1'
	androidTestCompile 'org.hamcrest:hamcrest-integration:1.1'
	androidTestCompile 'com.jakewharton.espresso:espresso:1.1-r4-patched'
	androidTestCompile('com.jakewharton.espresso:espresso-support-v4:1.1-r4-patched') {
		exclude group: 'com.android.support'
		exclude module: 'support-v4'
	}
}


apply plugin: 'jacoco'

jacoco {
	toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = [
		'../app/src/main/java'
]

task jacocoTestReport(type:JacocoReport, dependsOn: "testDebug") {

	group = "Reporting"
	description = "Generate Jacoco coverage reports"

	classDirectories = fileTree(
			dir: '../app/build/intermediates/classes/debug',
			excludes: ['**/R.class',
			           '**/R$*.class',
			           '**/*$ViewInjector*.*',
			           '**/BuildConfig.*',
			           '**/Manifest*.*']
	)

	additionalSourceDirs = files(coverageSourceDirs)
	sourceDirectories = files(coverageSourceDirs)
	executionData = files('../app/build/jacoco/testDebug.exec')

	reports {
		xml.enabled = true
		html.enabled = true
	}

}
